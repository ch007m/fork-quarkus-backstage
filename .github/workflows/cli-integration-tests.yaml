name: CLI integration test

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  QUARKUS_CLI_VERSION: 3.14.4

jobs:
  build:
    name: Build on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #        os: [windows-latest, macos-latest, ubuntu-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B clean install -Dno-format -DskipTests

      - name: Install Quarkus CLI and register the plugin
        run: |
          echo "## Install quarkus CLI"
          curl -sL https://repo.maven.apache.org/maven2/io/quarkus/quarkus-cli/$QUARKUS_CLI_VERSION/quarkus-cli-$QUARKUS_CLI_VERSION-runner.jar -o quarkus-cli.jar
          java -jar quarkus-cli.jar version

      - name: Create a quarkus projecte
        run: |
          echo "## Create a quarkus alias"
          shopt -s expand_aliases
          alias quarkus="java -jar ${GITHUB_WORKSPACE}/quarkus-cli.jar"
          
          echo "## Create a Quarkus project"

          TMP_DIR=$(mktemp -d)
          pushd $TMP_DIR
          quarkus create app
          cd code-with-quarkus
          quarkus ext add io.quarkiverse.backstage:quarkus-backstage:999-SNAPSHOT
          
          echo "## Init a git repository and push the code"
          git init
          
          git config user.email "coder@quarkus.io"
          git config user.name "Quarkus coder"
          git remote add origin https://github.com/quarkiverse/code-with-quarkus.git
          
          git add .
          git commit -asm "Initial upload"
          
          echo "## Register the plugin"
          quarkus plug add io.quarkiverse.backstage:quarkus-backstage-cli:999-SNAPSHOT

          # Enable automatic installation of generated catalog-info.yaml in dev mode
          echo "quarkus.backstage.devservices.template.installation.enabled=true" >> src/main/resources/application.properties

          quarkus dev &> dev.log &
          QUARKUS_PID=$!
          
          # Step 4: Monitor logs for "Installed features" message
          echo "Starting Quarkus and waiting for 'Profile dev activated' message..."
          
          while ! grep -q "Profile dev activated" dev.log; do
            sleep 1
          done

          cat dev.log

          ls -R .quarkus

          # List installed locations
          echo "Listing locations:"
          quarkus backstage location list --dev-service

          CATALOG_INFO_LOCATION=`quarkus backstage location list --dev-service | grep catalog-info.yaml | awk '{print $3}' | head -n 1`

          # Uninstall the location of the catalog-info.yaml
          echo "Uninstalling location with target: $CATALOG_INFO_LOCATION" 
          quarkus backstage location uninstall --dev-service $CATALOG_INFO_LOCATION

          #echo "Verifying uninstall:"
          #VERIFY_UNINSTALL=`quarkus backstage location list --dev-service | grep catalog-info.yaml | awk '{print $3}' | head -n 1`
          #echo "$VERIFY_UNINSTALL"
          #if [ -z "$VERIFY_UNINSTALL" ]; then
          #  echo "Uninstall successful"
          #else
          #  echo "Uninstall failed"
          #  exit 1
          #fi

          # Reinstall the location of the catalog-info.yaml
          echo "Reinstalling location with target: $CATALOG_INFO_LOCATION"
          quarkus backstage location install --dev-service $CATALOG_INFO_LOCATION

          #echo "Verifying reinstall:"
          #VERIFY_REINSTALL=`quarkus backstage location list --dev-service | grep catalog-info.yaml | awk '{print $3}' | head -n 1`
          #echo "$VERIFY_REINSTALL"
          #if [ ! -z "$VERIFY_REINSTALL" ]; then
          #  echo "Reinstall successful"
          #else
          #  echo "Reinstall failed"
          #  exit 1
          #fi

          kill $QUARKUS_PID
          popd
